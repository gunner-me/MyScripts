#! /bin/bash

get_cookie() {
        echo "------------------------------> get cmdb cookie:"
	CMDB_URL=
	CMDB_USER=
	CMDB_PASS=
        curl -D cookie -d "username=$CMDB_USER&password=$CMDB_PASS"  http://$CMDB_URL/user/logincheck
}

get_ip() {
	IP=`/sbin/ifconfig|grep -Po '10\.20\.\d{1,3}\.\d{1,3}'|head -1`
        #IP3=`echo $IP |awk -F\. '{print $3}'`
        #IP4=`echo $IP |awk -F\. '{print $4}'`
        #NIP3=$(($IP3-1))
        #IP=10.20.$NIP3.$IP4
	echo "------------------------------> server ip is $IP"
}

set_hostname_via_cmdb() {
	echo "------------------------------> get hostname via cmdb"
        HOSTNAME=`curl -sb cookie http://$CMDB_URL/cmdb/hosts/?first_ip=$IP|grep -Po 'CDM\d{1}[A-Z]\d{2}-\d{9}'`
        [ -z "$HOSTNAME" ] && echo "ERROR: need hostname input" && exit 1
        dmidecode -t bios|grep Vendor|grep -q HP && HOSTNAME=${HOSTNAME}.abcd.com
	if grep "release 6" /etc/redhat-release -q;then
		cat > /etc/sysconfig/network <<-EOF
		NETWORKING=yes
		HOSTNAME=$HOSTNAME
		EOF
	elif grep "release 7" /etc/redhat-release -q;then
		echo $HOSTNAME > /etc/hostname
	fi
        hostname $HOSTNAME
	echo "$IP $HOSTNAME" >> /etc/hosts
        echo "------------------------------> check_hostname: $HOSTNAME"
}

set_dns() {
        echo "------------------------------> set dns"
	cat > /etc/resolv.conf <<-EOF
	# Generated by NetworkManager
	nameserver 1.2.3.4
	EOF
        echo "------------------------------> check_dns: "
        cat /etc/resolv.conf
}

root_pw(){
        echo "------------------------------> root passwd"
        echo '123456'|sudo passwd root --stdin
}

set_rc_local() {
       	echo "------------------------------> set_rc_local:"
	cat > /etc/rc.local <<-EOF
	#!/bin/bash
	# THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES
	#
	# It is highly advisable to create own systemd services or udev rules
	# to run scripts during boot instead of using this file.
	#
	# In contrast to previous versions due to parallel execution during boot
	# this script will NOT be run after all other services.
	#
	# Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure
	# that this script will be executed during boot.
	
	touch /var/lock/subsys/local"
	EOF
        echo "------------------------------> check_rc_local: "
        cat /etc/rc.local | egrep -v '^#|^$'
}

set_sshd_timeout() {
       	echo "------------------------------> set_sshd_timeout: "
       	sed -i 's/^#ClientAliveInterval 0/ClientAliveInterval 3600/g' /etc/ssh/sshd_config
       	sed -i 's/^#ClientAliveCountMax 3/ClientAliveCountMax 3/g'    /etc/ssh/sshd_config
        echo "------------------------------> check_sshd_timeout:"
        egrep 'ClientAliveInterval|ClientAliveCountMax' /etc/ssh/sshd_config
}

delete_test_private_key() {
        echo "------------------------------> delete_test_private_key: "
        [ -f /home/test/.ssh/id_rsa ] && rm -f /home/test/.ssh/id_rsa
}

set_sudo_to_root() {
        echo "------------------------------> set sudo_to_root:"
       	if [ ! -f /etc/sudoers.d/sudo_to_root ]; then
       		echo "------------------------------> set_sudo_to_root: "
		cat > /etc/sudoers.d/sudo_to_root <<-EOF
		abc ALL=(ALL) NOPASSWD:ALL
		xyz ALL=(ALL) NOPASSWD:ALL
		EOF
       	else
       		echo "------------------------------> set_sudo_to_root: Ignored!"
       	fi
	DEP=`curl -sb cookie http://$CMDB_URL/cmdb/hosts/?first_ip=$ip|grep -oP '(?<=business_dept":\[").+?(?="\],"business_owner)'`
	if [ "$DEP"x = '云平台部'x ];then
		cat >> /etc/sudoers.d/sudo_to_root <<-EOF
		zhangsan ALL=(ALL) NOPASSWD:ALL
                lisi ALL=(ALL) NOPASSWD:ALL
		EOF
	elif [ "$DEP"x = 'db'x ];then
                cat >> /etc/sudoers.d/sudo_to_root <<-EOF
                wangwu ALL=(ALL) NOPASSWD:ALL
                zhaoliu ALL=(ALL) NOPASSWD:ALL
		EOF
	fi

	sed -i -e 's/^[[:space:]][[:space:]]*//g' /etc/sudoers.d/sudo_to_root
}

set_yum_repo() {
       	echo "------------------------------> set_yum_repo: "
       	rm -f /etc/yum.repos.d/*
       	wget -q http://1.2.3.4:10022/files/all.repo -O /etc/yum.repos.d/all.repo
}

install_puppet_agent() {
	if [ ! -f /etc/puppet/puppet.conf ]; then
	        echo "------------------------------> install_puppet_agent:"
	        sleep 2
	        yum erase -y ruby-augeas ruby-shadow rubygem-json facter hiera puppet -q
	        yum install -y ruby -q
	        for i in `gem source -l | tail -n +3`
	        do
	                gem sources -r $i
	        done
	        gem sources -a http://1.2.3.4/pub/gems/public/
	        gem install puppet --version 3.7.5 -s http://1.2.3.4/pub/gems/public --no-rdoc --no-ri
	        sed -i '/1.2.3.4/d' /etc/hosts
	        echo '1.2.3.4 M3A04' >> /etc/hosts
	        [ -d /etc/puppet ] || mkdir -p /etc/puppet
	        [ -d /var/log/puppet ] || mkdir -p /var/log/puppet
	        cat > /etc/puppet/puppet.conf <<- EOF
		[main]
		    vardir  = /var/lib/puppet
		    confdir = /etc/puppet
		    logdir  = /var/log/puppet
		    rundir  = /var/run/puppet
		    ssldir  = \$vardir/ssl
		
		[agent]
		    classfile = \$vardir/classes.txt
		    localconfig = \$vardir/localconfig
		    server = M3A07-20011014
		    report = true
		    runinterval = 1800
		    pluginsync = true
		EOF
	
	        if [ $? = 0 ]
	        then
	                find /var/lib/puppet -type f -print0 | xargs -0r rm
	                #puppet agent -t --tags base
	        fi
	else
	        echo "------------------------------> install_puppet_agent: Ignored!"
	fi
}

install_salt_67() {
	echo "------------------------------> install_salt:"
	grep "release 7" /etc/redhat-release -q && v=7
	grep "release 6" /etc/redhat-release -q && v=6

	if [ $v -ne 6 -a $v -ne 7 ];then
	       	echo Release version unknow
	       	exit 1
	fi

	grep 10.20.36.20 /etc/salt/minion -wq
	if [ $? -eq 0 ] ;then
	       	echo Abort
	       	exit
	fi

	yum -y install salt-minion -q
	rm -f /etc/salt/minion
	rm -f /etc/salt/pki/minion/*
	wget http://1.2.3.4/script/minion -O /etc/salt/minion
	sed "s/IP/$IP/g" /etc/salt/minion -i

	if [ $v -eq 6 ];then
	       	/etc/init.d/salt-minion restart
	else
	       	systemctl enable salt-minion
	       	systemctl start salt-minion
	fi
}

install_disk_manage_tool() {
        echo "------------------------------> install ipmitool & megacli: "
        yum install -y ipmitool -q
        dmidecode -t bios|grep Vendor|grep -q Dell && yum install -y  MegaCli -q || yum install -y hpssacli -q
}

set_bond_via_cmdb_6() {

        BOND_CONF=`curl -sb cookie http://$CMDB_URL/cmdb/hosts/?first_ip=$IP|grep -oP '(?<=bond_config":").+?(?=","machine_type)'`
	[ -z $BOND_CONF ]&&echo "Can't get bond info, exit..."||echo "------------------------------> bond_conf is $BOND_CONF"
	if echo $BOND_CONF|grep -q eth4,eth5;then
		grep -q "release 6" /etc/redhat-release && BOND_CONF=`echo $BOND_CONF|sed 's/eth4,eth5/eth2,eth3/'`
	fi
       	if [ -n $BOND_CONF ];then
		BOND0_IP=`echo $BOND_CONF|cut -d, -f1|cut -d'(' -f2`
       		BOND0_DEV_1=`echo $BOND_CONF|cut -d, -f2`
		BOND0_DEV_2=`echo $BOND_CONF|cut -d, -f3`
		echo $BOND0_IP,$BOND0_DEV_1,$BOND0_DEV_2

		cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_1 /tmp/
		cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_2 /tmp/
		rm /etc/modprobe.d/bonding.conf -f
		fip=`echo $BOND0_IP|awk  -F. '{print $1,$2,$3}' |sed 's/ /./g'`
       		eip=`echo $BOND0_IP|awk  -F. '{print $4}' `

                mask=`ifconfig|grep 10.20|head -n1|grep -Po '255.255.255.\d{1,3}'`
                if [ $mask = '255.255.255.0' ];then
                        gateway="$fip.254"
                elif [ $mask = '255.255.255.128' ];then
                        [ $eip -gt 128 ] && gateway="$fip.254" || gateway="$fip.126"
                fi

		cat > /etc/sysconfig/network-scripts/ifcfg-bond0 <<-EOF
		DEVICE=bond0
		IPADDR=$BOND0_IP
		NETMASK=$mask
		USERCTL=no
		BOOTPROTO=none
		ONBOOT=yes
		GATEWAY=$gateway
		EOF
       		# modify eth
       		cat > /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_1 <<-EOF
		DEVICE=$BOND0_DEV_1
		USERCTL=no
		ONBOOT=yes
		MASTER=bond0
		SLAVE=yes
		BOOTPROTO=none
		EOF
       		cat > /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_2 <<-EOF
		DEVICE=$BOND0_DEV_2
		USERCTL=no
		ONBOOT=yes
		MASTER=bond0
		SLAVE=yes
		BOOTPROTO=none
		EOF
       		cat > /etc/modprobe.d/bond0.conf <<-EOF
		alias bond0 bonding
		options bond0 miimon=100 mode=4 xmit_hash_policy=1
		EOF
       		modprobe bonding
      	 	/etc/init.d/network restart
 	      	rmmod bonding
	       	ping -c 4  $gateway >/dev/null

       		echo $BOND_CONF |grep -q bond1
       		if [ $? -eq 0 ];then
			BOND1_IP=`echo $BOND_CONF|cut -d, -f5|cut -d'(' -f2`
       			BOND1_DEV_1=`echo $BOND_CONF|cut -d, -f6`
       			BOND1_DEV_2=`echo $BOND_CONF|cut -d, -f7`
			echo $BOND1_IP,$BOND1_DEV_1,$BOND1_DEV_2

			cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_1 /tmp/
			cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_2 /tmp/
			rm /etc/modprobe.d/bonding.conf -f
	                fip=`echo $BOND0_IP|awk  -F. '{print $1,$2,$3}' |sed 's/ /./g'`
	                eip=`echo $BOND0_IP|awk  -F. '{print $4}' `
	                #mask=`ifconfig|grep 10.20|head -n1|grep -Po '255.255.255.\d{1,3}'`
	                if [ $mask = '255.255.255.0' ];then
	                        gateway="$fip.254"
	                elif [ $mask = '255.255.255.128' ];then
	                        [ $eip -gt 128 ] && gateway="$fip.254" || gateway="$fip.126"
	                fi
                        #mask=`ifconfig|grep -Po '255.255.255.\d{1,3}'`
	                #[ $mask = '255.255.255.0' ] && gateway="$fip.254"
	                #[ $mask = '255.255.255.128' -a $eip -gt 128 ] && gateway="$fip.254" || gateway="$fip.126"

			cat > /etc/sysconfig/network-scripts/ifcfg-bond1 <<-EOF
			DEVICE=bond1
			IPADDR=$BOND1_IP
			NETMASK=$mask
			USERCTL=no
			BOOTPROTO=none
			ONBOOT=yes
			#GATEWAY=$gateway
			EOF
    		   	# modify eth
		       	cat > /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_1 <<-EOF
			DEVICE=$BOND1_DEV_1
			USERCTL=no
			ONBOOT=yes
			MASTER=bond1
			SLAVE=yes
			BOOTPROTO=none
			EOF
		       	cat > /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_2 <<-EOF
			DEVICE=$BOND1_DEV_2
			USERCTL=no
			ONBOOT=yes
			MASTER=bond1
			SLAVE=yes
			BOOTPROTO=none
			EOF
       			cat > /etc/modprobe.d/bond1.conf <<-EOF
			alias bond1 bonding
			options bond1 miimon=100 mode=4 xmit_hash_policy=1
			EOF
       			modprobe bonding
	       		/etc/init.d/network restart
	       		rmmod bonding
		       	ping -c 4  $gateway >/dev/null
       		fi
       	fi
}

set_bond_via_cmdb_7() {

	BOND_CONF=`curl -sb cookie http://$CMDB_URL/cmdb/hosts/?first_ip=$IP|grep -oP '(?<=bond_config":").+?(?=","machine_type)'`
        [ -z $BOND_CONF ]&&echo "Can't get bond info, exit..."||echo "------------------------------> bond_conf is $BOND_CONF"
       	if [ -n $BOND_CONF ];then
       		BOND0_IP=`echo $BOND_CONF|cut -d, -f1|cut -d'(' -f2`
       		BOND0_DEV_1=`echo $BOND_CONF|cut -d, -f2`
       		BOND0_DEV_2=`echo $BOND_CONF|cut -d, -f3`
       		echo $BOND0_IP,$BOND0_DEV_1,$BOND0_DEV_2

       		cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_1 /tmp/
       		cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_2 /tmp/
       		rm /etc/modprobe.d/bonding.conf -f
       		fip=`echo $BOND0_IP|awk  -F. '{print $1,$2,$3}' |sed 's/ /./g'`
       		eip=`echo $BOND0_IP|awk  -F. '{print $4}' `

                mask=`ifconfig|grep 10.20|head -n1|grep -Po '255.255.255.\d{1,3}'`
                if [ $mask = '255.255.255.0' ];then
                        gateway="$fip.254"
                elif [ $mask = '255.255.255.128' ];then
                        [ $eip -gt 128 ] && gateway="$fip.254" || gateway="$fip.126"
                fi

       		cat > /etc/sysconfig/network-scripts/ifcfg-bond0 <<-EOF
		DEVICE=bond0
		NAME=bond0
		TYPE=Bond
		BONDING_MASTER=yes
		IPADDR=$BOND0_IP
		PREFIX=$mask
		GATEWAY=$gateway
		ONBOOT=yes
		BOOTPROTO=none
		BONDING_OPTS="bond0 mode=4 miimon=100 xmit_hash_policy=1"
		EOF

       		# modify eth
       		cat > /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_1 <<-EOF
		DEVICE=$BOND0_DEV_1
		NAME=bond0-slave
		TYPE=Ethernet
		BOOTPROTO=none
		ONBOOT=yes
		MASTER=bond0
		SLAVE=yes
		EOF

       		cat > /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_2 <<-EOF
		DEVICE=$BOND0_DEV_2
		NAME=bond0-slave
		TYPE=Ethernet
		BOOTPROTO=none
		ONBOOT=yes
		MASTER=bond0
		SLAVE=yes
		EOF

		nmcli con load /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_1
		nmcli con load /etc/sysconfig/network-scripts/ifcfg-$BOND0_DEV_2
		nmcli con load /etc/sysconfig/network-scripts/ifcfg-bond0 && nmcli con reload
		systemctl restart network
		sleep 3
		ping -c 4  $gateway >/dev/null
		echo "ping -c 10  $gateway >> /etc/rc.local"

       		echo $BOND_CONF |grep -q bond1
       		if [ $? -eq 0 ];then
       			BOND1_IP=`echo $BOND_CONF|cut -d, -f5|cut -d'(' -f2`
       			BOND1_DEV_1=`echo $BOND_CONF|cut -d, -f6`
       			BOND1_DEV_2=`echo $BOND_CONF|cut -d, -f7`

       			echo $BOND1_IP
       			echo $BOND1_DEV_1
       	               	echo $BOND1_DEV_2

       			cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_1 /tmp/
       			cp -f  /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_2 /tmp/
       			rm /etc/modprobe.d/bonding.conf -f
       			fip=`echo $BOND1_IP|awk  -F. '{print $1,$2,$3}' |sed 's/ /./g'`
       	       		eip=`echo $BOND1_IP|awk  -F. '{print $4}' `
	               	mask=`ifconfig|grep 10.20|head -n1|grep -Po '255.255.255.\d{1,3}'`
        	        if [ $mask = '255.255.255.0' ];then
  	        		gateway="$fip.254"
	                elif [ $mask = '255.255.255.128' ];then
        	                [ $eip -gt 128 ] && gateway="$fip.254" || gateway="$fip.126"
                	fi
	                #mask=`ifconfig|grep -Po '255.255.255.\d{1,3}'`
        	        #[ $mask = '255.255.255.0' ] && gateway="$fip.254"
                	#[ $mask = '255.255.255.128' -a $eip -gt 128 ] && gateway="$fip.254" || gateway="$fip.126"

       			cat > /etc/sysconfig/network-scripts/ifcfg-bond1 <<-EOF
			DEVICE=bond1
			NAME=bond1
			TYPE=Bond
			BONDING_MASTER=yes
			IPADDR=$BOND1_IP
			PREFIX=$mask
			#GATEWAY=$gateway
			ONBOOT=yes
			BOOTPROTO=none
			BONDING_OPTS="bond1 mode=4 miimon=100 xmit_hash_policy=1"
			EOF
       		       	# modify eth
       		       	cat > /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_1 <<-EOF
			DEVICE=$BOND1_DEV_1
			NAME=bond1-slave
			TYPE=Ethernet
			BOOTPROTO=none
			ONBOOT=yes
			MASTER=bond1
			SLAVE=yes
			EOF
       		       	cat > /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_2 <<-EOF
			DEVICE=$BOND1_DEV_2
			NAME=bond1-slave
			TYPE=Ethernet
			BOOTPROTO=none
			ONBOOT=yes
			MASTER=bond1
			SLAVE=yes
			EOF

			nmcli con load /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_1
			nmcli con load /etc/sysconfig/network-scripts/ifcfg-$BOND1_DEV_2
			nmcli con load /etc/sysconfig/network-scripts/ifcfg-bond1 && nmcli con reload
			systemctl restart network
			sleep 3
			ping -c 4  $gateway >/dev/null
			ifup bond1
       		fi
       	fi
}
#----------------------- main ----------------------------

get_ip
get_cookie
set_hostname_via_cmdb
set_dns
set_rc_local
set_sshd_timeout
delete_test_private_key
set_sudo_to_root
set_yum_repo
install_puppet_agent
install_disk_manage_tool
install_salt_67
root_pw
grep -q "release 6" /etc/redhat-release && set_bond_via_cmdb_6
grep -q "release 7" /etc/redhat-release && set_bond_via_cmdb_7
#logout
curl  -b cookie  http://$CMDB_URL/user/logout
